<html><head></head><body>
<iframe id="radar-iframe" class="resp-iframe" scrolling="no" src="https://southwest.quickbase.com/up/bp4tm667q/g/r6v/eh/va/index.html?usertoken=byhv8u_fzh_bpatg9tdk3ukytdfs99rb9pq7ys" style="min-height: 550px; height: 174px;" data-set-iframe-height-id="24496754" data-iframe-auto-height-current-src="https://southwest.quickbase.com/up/bp4tm667q/g/r6v/eh/va/index.html?usertoken=byhv8u_fzh_bpatg9tdk3ukytdfs99rb9pq7ys"></iframe>
<style>
#main {
    padding: 0 0 0 15px !important;
    width: 100%;
    margin-left: 0px !important;
}
#main #main-header {
    margin-right: 10px;
    overflow: hidden;
    margin-bottom: 5px;
}
#navigation {
    margin-right: 15px;
}
.ia-splitter-left {
   display: none;
}
#labels-section {
   display: none;
}
.resp-iframe {
    width: 100%;
    min-height: 550px;
    border: 0;
}
.page-metadata {
    display: none;
}
#title-heading {
    display: none;
}
#likes-and-labels-container {
    display: none;
}
#comments-section {
    display: none;
}
.footer-body {
    display: none;
}
</style>
<script>
// catch and suppress XHR requests to the Confluence whitelist extension
//  not sure why confluence does this.
(function() {
    var proxied = window.XMLHttpRequest.prototype.open;
    window.XMLHttpRequest.prototype.open = async function() {
        if (arguments[1].includes("/whitelist/") || arguments[1].includes("batch.js") || arguments[1].includes("synchrony/") || arguments[1].includes("batch")) {
            return undefined;
        } else {
            return proxied.apply(this, [].slice.call(arguments));
        }
    };
})();
window.loadAvailableFormPages = function () {console.log("nope") }

function resizeIframe() {
  var bodyHeight = window.innerHeight|| document.documentElement.clientHeight|| 
    document.body.clientHeight;
  var calcHeight=bodyHeight-80;
  if (calcHeight < 550) {
      calcHeight=550;
  }
  document.getElementById('radar-iframe').style.minHeight = calcHeight+"px";
}
window.onresize = resizeIframe;
resizeIframe();




function ready(callback){
    // in case the document is already rendered
    if (document.readyState!='loading') callback();
    // modern browsers
    else if (document.addEventListener) document.addEventListener('DOMContentLoaded', callback);
    // IE <= 8
    else document.attachEvent('onreadystatechange', 
function(){
        if (document.readyState=='complete') callback();
    });
}
ready(
function(){
  if (document.querySelector('.ia-fixed-sidebar.collapsed') == null) {
      //document.querySelector(".expand-collapse-trigger").click();
  }
});
'use strict';
(
function () {
  'use strict';
  polyFillNodeListForEach();
  window.addEventListener('setIframeHeight', onSetIframeHeight);
  window.addEventListener('message', onMessage);
  var that = {
    setHeight: 
function setHeight(data) {
      data.height = parseInt(data.height, 10);
      triggerCustomEvent(window, 'setIframeHeight', data);
    }
  };
  var lastHeights = {};
  /************** PRIVATE VARS AND FUNCTIONS **************/
  
function findIframeBySrc(src) {
    var bestMatchingIframe = null;
    document.querySelectorAll('iframe').forEach(
function (iframe) {
      var iframeSrc = iframe.dataset.iframeAutoHeightCurrentSrc || iframe.src;
      if (iframeSrc) {
        iframeSrc = absolutizeUrl(iframeSrc);
        if (iframeSrc === src) {
          bestMatchingIframe = iframe;
          return false; //break loop
        }
      }
    });
    return bestMatchingIframe;
  }
  
function findIframeById(iframeId) {
    var bestMatchingIframe = null;
    document.querySelectorAll('iframe').forEach(
function (iframe) {
      if (!bestMatchingIframe && iframe.dataset.setIframeHeightId === iframeId) {
        bestMatchingIframe = iframe;
      }
    });
    return bestMatchingIframe;
  }
  
function absolutizeUrl(url) {
    if (url.indexOf('/') === 0) {
      url = getHostForUrl(document.location.href) + url;
    }
    return url;
  }
  
function getHostForUrl(url) {
    var matches = url.match(/https?:\/\/.[^/]+/) || [];
    return matches[0];
  }
  
function normalizeUrl(url) {
    return url.replace(/^https?:\/\//, '//');
  }
  
function onSetIframeHeight(e) {
    var data = e.detail;
    var iframe;
    iframe = findIframeById(data.iframeId);
    if (!iframe) {
      iframe = findIframeBySrc(data.iframeSrc);
    }
    if (!iframe && data.iframeReferrer) {
      iframe = findIframeBySrc(data.iframeReferrer);
    }
    if (iframe) {
      iframe.dataset.setIframeHeightId = data.iframeId;
      iframe.style.height = data.height + 'px';
      var urlHasChanged = normalizeUrl(iframe.dataset.iframeAutoHeightCurrentSrc || iframe.src) !== normalizeUrl(data.iframeSrc);
      iframe.dataset.iframeAutoHeightCurrentSrc = data.iframeSrc;
      var lastHeight = lastHeights[data.iframeId];
      var height = data.height;
      if (lastHeight === undefined) {
        triggerCustomEvent(window, 'setIframeHeight:determined', data);
      } else if (lastHeight > height) {
        triggerCustomEvent(window, 'setIframeHeight:shrinked', data);
      } else if (lastHeight < height) {
        triggerCustomEvent(window, 'setIframeHeight:enlarged', data);
      }
      lastHeights[data.iframeId] = height;
      if (window.history.replaceState && iframe.dataset.iframeAutoHeightDeepLinkPattern && urlHasChanged) {
        var parentUrl = absolutizeUrl(iframe.dataset.iframeAutoHeightDeepLinkPattern.replace(/%deepLinkIframeSrc%/, encodeURIComponent(data.iframeSrc)));
        if (normalizeUrl(document.location.href) !== normalizeUrl(parentUrl)) {
          window.history.replaceState({}, '', parentUrl);
          triggerCustomEvent(window, 'setIframeHeight:deepLink:changed', {
            childUrl: data.iframeSrc,
            parentUrl: parentUrl
          });
        }
        if (iframe.contentWindow && iframe.contentWindow.postMessage) {
          iframe.contentWindow.postMessage('setIframeHeight:deepLink:changed::{ "parentUrl": "' + parentUrl + '", "childUrl": "' + data.iframeSrc + '"}', '*');
        }
      }
    }
  }
  
function onMessage(e) {
    var data = e.data;
    if (typeof data === 'string' && data.indexOf('::')) {
      var data = data.split('::');
      if (data.length === 2 && data[0] === 'setIframeHeight') {
        var params = JSON.parse(data[1]);
        that.setHeight(params);
      }
    }
  }
  
function triggerCustomEvent(element, eventName, eventData) {
    var e = document.createEvent('CustomEvent');
    e.initCustomEvent(eventName, true, true, eventData);
    element.dispatchEvent(e);
  }
  
function polyFillNodeListForEach() {
    // Polyfill for Browsers not supporting NodeList.forEach
    if (window.NodeList && !NodeList.prototype.forEach) {
      NodeList.prototype.forEach = 

function (callback, thisArg) {
        thisArg = thisArg || window;
        for (var i = 0; i < this.length; i++) {
          callback.call(thisArg, this[i], i, this);
        }
      };
    }
  }
  return that;
})();

</script>

</body></html>
